<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="clr-namespace:AvaMSN.Models;assembly=AvaMSN.Shared"
             xmlns:vm="clr-namespace:AvaMSN.ViewModels"
             xmlns:dvm="clr-namespace:AvaMSN.ViewModels.Design"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:conv="clr-namespace:AvaMSN.Converters"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="450"
             x:Class="AvaMSN.Views.ContactListView"
             x:DataType="vm:ContactListViewModel">

  <Design.DataContext>
    <dvm:DesignContactListViewModel/>
  </Design.DataContext>

  <UserControl.Resources>
    <conv:BoldConverter x:Key="boldConverter"/>
    <StreamGeometry x:Key="person_regular">M35.7502,28 C38.0276853,28 39.8876578,29.7909151 39.9950978,32.0427546 L40,32.2487 L40,33 C40,36.7555 38.0583,39.5669 35.0798,41.3802 C32.1509,43.1633 28.2139,44 24,44 C19.7861,44 15.8491,43.1633 12.9202,41.3802 C10.0319285,39.6218485 8.11862909,36.9249713 8.00532378,33.3388068 L8,33 L8,32.2489 C8,29.9703471 9.79294995,28.1122272 12.0440313,28.0048972 L12.2499,28 L35.7502,28 Z M35.7502,30.5 L12.2499,30.5 C11.331345,30.5 10.5787597,31.2066575 10.5057976,32.1054618 L10.5,32.2489 L10.5,33 C10.5,35.7444 11.8602,37.8081 14.2202,39.2448 C16.6297,40.7117 20.0677,41.5 24,41.5 C27.9323,41.5 31.3703,40.7117 33.7798,39.2448 C36.0555143,37.8594107 37.4015676,35.8910074 37.4948116,33.2914406 L37.5,33 L37.5,32.2488 C37.5,31.331195 36.7934328,30.5787475 35.8937801,30.5057968 L35.7502,30.5 Z M24,4 C29.5228,4 34,8.47715 34,14 C34,19.5228 29.5228,24 24,24 C18.4772,24 14,19.5228 14,14 C14,8.47715 18.4772,4 24,4 Z M24,6.5 C19.8579,6.5 16.5,9.85786 16.5,14 C16.5,18.1421 19.8579,21.5 24,21.5 C28.1421,21.5 31.5,18.1421 31.5,14 C31.5,9.85786 28.1421,6.5 24,6.5 Z</StreamGeometry>
    <StreamGeometry x:Key="person_add_regular">M17.5,12 C20.5376,12 23,14.4624 23,17.5 C23,20.5376 20.5376,23 17.5,23 C14.4624,23 12,20.5376 12,17.5 C12,14.4624 14.4624,12 17.5,12 Z M12.0223,13.9993 C11.7256,14.4626 11.486,14.966 11.3136,15.4996 L4.25242,15.4999 C3.83882,15.4999 3.50354,15.8352 3.50354,16.2488 L3.50354,16.8265 C3.50354,17.3622 3.69465,17.8802 4.04251,18.2876 C5.29582,19.7553 7.2617,20.5011 10,20.5011 C10.5964,20.5011 11.1563,20.4657 11.6802,20.3952 C11.9254,20.8901 12.233,21.3486 12.5917,21.7615 C11.7962,21.9217 10.9314,22.0011 10,22.0011 C6.85414,22.0011 4.46812,21.0959 2.90182,19.2617 C2.32206,18.5828 2.00354,17.7193 2.00354,16.8265 L2.00354,16.2488 C2.00354,15.0068 3.0104,13.9999 4.25242,13.9999 L12.0223,13.9993 Z M17.5,14 L17.4101,14.0081 C17.206,14.0451 17.0451,14.206 17.0081,14.4101 L17,14.5 L16.999,17 L14.5039,17 L14.414,17.0081 C14.2099,17.0451 14.049,17.206 14.012,17.4101 L14.0039,17.5 L14.012,17.5899 C14.049,17.794 14.2099,17.9549 14.414,17.992 L14.5039,18 L16.999,18 L17,20.5 L17.0081,20.5899 C17.0451,20.794 17.206,20.9549 17.4101,20.9919 L17.5,21 L17.5899,20.9919 C17.794,20.9549 17.9549,20.794 17.9919,20.5899 L18,20.5 L17.999,18 L20.5039,18 L20.5938,17.992 C20.7979,17.9549 20.9588,17.794 20.9958,17.5899 L21.0039,17.5 L20.9958,17.4101 C20.9588,17.206 20.7979,17.0451 20.5938,17.0081 L20.5039,17 L17.999,17 L18,14.5 L17.9919,14.4101 C17.9549,14.206 17.794,14.0451 17.5899,14.0081 L17.5,14 Z M10,2.00464 C12.7614,2.00464 15,4.24321 15,7.00464 C15,9.76606 12.7614,12.0046 10,12.0046 C7.23857,12.0046 5,9.76606 5,7.00464 C5,4.24321 7.23857,2.00464 10,2.00464 Z M10,3.50464 C8.067,3.50464 6.5,5.07164 6.5,7.00464 C6.5,8.93764 8.067,10.5046 10,10.5046 C11.933,10.5046 13.5,8.93764 13.5,7.00464 C13.5,5.07164 11.933,3.50464 10,3.50464 Z</StreamGeometry>
    <StreamGeometry x:Key="prohibited_regular">M24 5C34.4934 5 43 13.5066 43 24C43 34.4934 34.4934 43 24 43C13.5066 43 5 34.4934 5 24C5 13.5066 13.5066 5 24 5ZM36.518 13.2502L13.2502 36.518C16.1377 39 19.8937 40.5 24 40.5C33.1127 40.5 40.5 33.1127 40.5 24C40.5 19.8937 39 16.1377 36.518 13.2502ZM24 7.5C14.8873 7.5 7.5 14.8873 7.5 24C7.5 28.1063 9.00002 31.8623 11.482 34.7498L34.7498 11.482C31.8623 9.00002 28.1063 7.5 24 7.5Z</StreamGeometry>
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector="Button.presence-button">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
      <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style Selector="FlyoutPresenter">
      <Setter Property="MinWidth" Value="200"/>
    </Style>
  </UserControl.Styles>

  <Grid Margin="30"
        RowDefinitions="Auto, 5, Auto, 30, *">

    <StackPanel Spacing="5"
                Orientation="Horizontal">
      <Border CornerRadius="5"
              ClipToBounds="True">
        <Image Source="{Binding Profile.DisplayPicture}"
             MaxHeight="90"
             MaxWidth="90"/>
      </Border>

      <StackPanel Spacing="5">
        <ComboBox BorderThickness="0"
                  SelectedIndex="{Binding SelectedOptionIndex}"
                  Name="presenceBox"
                  Background="Transparent"
                  ToolTip.Tip="Change your status or enter options"
                  ToolTip.ShowDelay="1000"
                  SelectionChanged="ComboBox_SelectionChanged">

          <ComboBoxItem Padding="3"
                        Height="0">
            <StackPanel Spacing="3"
                        Orientation="Horizontal">
              <TextBlock Text="{Binding Profile.DisplayName}"
                         FontSize="20"
                         FontWeight="ExtraBold"/>
              <TextBlock Text="{Binding Profile.Presence, StringFormat='({0})'}"
                         VerticalAlignment="Bottom"/>
            </StackPanel>
          </ComboBoxItem>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    Tapped="Button_Tapped"
                    Command="{Binding ChangePresenceCommand}"
                    CommandParameter="{Binding Statuses[0].(models:Presence).ShortName}">
              <StackPanel Spacing="3"
                          Orientation="Horizontal">
                <PathIcon Data="{StaticResource person_regular}"
                          Foreground="{Binding Statuses[0].(models:Presence).Color}"/>
                <TextBlock Text="{Binding Statuses[0].(models:Presence).Status}"></TextBlock>
              </StackPanel>
            </Button>
          </ComboBoxItem>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    Tapped="Button_Tapped"
                    Command="{Binding ChangePresenceCommand}"
                    CommandParameter="{Binding Statuses[1].(models:Presence).ShortName}">
              <StackPanel Spacing="3"
                          Orientation="Horizontal">
                <PathIcon Data="{StaticResource person_regular}"
                          Foreground="{Binding Statuses[1].(models:Presence).Color}"/>
                <TextBlock Text="{Binding Statuses[1].(models:Presence).Status}"></TextBlock>
              </StackPanel>
            </Button>
          </ComboBoxItem>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    Tapped="Button_Tapped"
                    Command="{Binding ChangePresenceCommand}"
                    CommandParameter="{Binding Statuses[2].(models:Presence).ShortName}">
              <StackPanel Spacing="3"
                          Orientation="Horizontal">
                <PathIcon Data="{StaticResource person_regular}"
                          Foreground="{Binding Statuses[2].(models:Presence).Color}"/>
                <TextBlock Text="{Binding Statuses[2].(models:Presence).Status}"></TextBlock>
              </StackPanel>
            </Button>
          </ComboBoxItem>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    Tapped="Button_Tapped"
                    Command="{Binding ChangePresenceCommand}"
                    CommandParameter="{Binding Statuses[3].(models:Presence).ShortName}">
              <StackPanel Spacing="3"
                          Orientation="Horizontal">
                <PathIcon Data="{StaticResource person_regular}"
                          Foreground="{Binding Statuses[3].(models:Presence).Color}"/>
                <TextBlock Text="{Binding Statuses[3].(models:Presence).Status}"></TextBlock>
              </StackPanel>
            </Button>
          </ComboBoxItem>

          <Separator/>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    Tapped="Display_Picture_Tapped"
                    ToolTip.Tip="Change your display picture"
                    ToolTip.ShowDelay="1000">
              Change display picture
            </Button>
          </ComboBoxItem>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    ToolTip.Tip="Change your display name"
                    ToolTip.ShowDelay="1000">
              <TextBlock>Change display name</TextBlock>
              <Button.Flyout>
                <Flyout Placement="BottomEdgeAlignedLeft">
                  <StackPanel Spacing="5">
                    <TextBox Text="{Binding DisplayName}"
                             Watermark="New display name"/>
                    <Button Command="{Binding ChangeNameCommand}"
                            Tapped="Button_Tapped">Change</Button>
                  </StackPanel>
                </Flyout>
              </Button.Flyout>
            </Button>
          </ComboBoxItem>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    Tapped="Button_Tapped"
                    Command="{Binding OptionsCommand}"
                    ToolTip.Tip="Open options window"
                    ToolTip.ShowDelay="1000">
              <TextBlock>Options</TextBlock>
            </Button>
          </ComboBoxItem>

          <Separator/>

          <ComboBoxItem>
            <Button Classes="presence-button"
                    Tapped="Button_Tapped"
                    Command="{Binding SignOutCommand}"
                    ToolTip.Tip="Sign out and return to login screen"
                    ToolTip.ShowDelay="1000">
              <TextBlock>Sign out</TextBlock>
            </Button>
          </ComboBoxItem>

          <ComboBox.Styles>
            <Style Selector="ComboBoxItem">
              <Setter Property="Padding" Value="0"/>
            </Style>
          </ComboBox.Styles>

        </ComboBox>

        <TextBox Width="250"
                 Margin="3 0 0 0"
                 HorizontalAlignment="Left"
                 BorderThickness="0"
                 Background="Transparent"
                 Watermark="Share a quick message"
                 Text="{Binding PersonalMessage}"
                 ToolTip.Tip="Enter a personal message"
                 ToolTip.ShowDelay="1000">
          <i:Interaction.Behaviors>
            <ia:EventTriggerBehavior EventName="LostFocus">
              <InvokeCommandAction Command="{Binding ChangePersonalMessageCommand}"/>
            </ia:EventTriggerBehavior>
          </i:Interaction.Behaviors>
        </TextBox>
      </StackPanel>

    </StackPanel>
    
    <Button HorizontalAlignment="Right"
            Background="Transparent"
            ToolTip.Tip="Add a contact"
            ToolTip.ShowDelay="1000">
      <PathIcon Data="{StaticResource person_add_regular}"/>
      <Button.Flyout>
        <Flyout>
          <StackPanel Spacing="10">
            <StackPanel Spacing="3">
              <TextBox Text="{Binding NewContactEmail}"
                       Watermark="Contact email"/>
              <TextBox Text="{Binding NewContactDisplayName}"
                       Watermark="Contact display name"/>
            </StackPanel>
            <Button Command="{Binding AddContactCommand}"
                    HorizontalAlignment="Center">Add contact</Button>
          </StackPanel>
        </Flyout>
      </Button.Flyout>
    </Button>

    <TreeView Grid.Row="4"
              ItemsSource="{Binding ContactGroups}"
              SelectedItem="{Binding SelectedContact}">
      <TreeView.DataTemplates>

        <TreeDataTemplate DataType="models:ContactGroup"
                          ItemsSource="{Binding Contacts}">
          <TextBlock Text="{Binding Name}"/>
        </TreeDataTemplate>

        <DataTemplate DataType="models:Contact">
          <StackPanel Orientation="Horizontal"
                      Spacing="3"
                      ToolTip.Tip="Send a message to this contact"
                      ToolTip.ShowDelay="1000">
            <Grid>
              <PathIcon Data="{StaticResource person_regular}"
                        Foreground="{Binding PresenceColor}"/>
              <PathIcon Data="{StaticResource prohibited_regular}"
                        Foreground="Red"
                        IsVisible="{Binding Blocked}"/>
            </Grid>
            <TextBlock Text="{Binding DisplayName}"
                       FontWeight="{Binding NewMessages, Converter={StaticResource boldConverter}}"/>
            <TextBlock Text="{Binding PersonalMessage, StringFormat='- {0}'}"
                       Foreground="LightGray"
                       IsVisible="{Binding PersonalMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
          </StackPanel>
        </DataTemplate>

      </TreeView.DataTemplates>

      <TreeView.Styles>
        <Style Selector="TreeViewItem">
          <Setter Property="IsExpanded" Value="True"/>
        </Style>
      </TreeView.Styles>

      <TreeView.ContextMenu>
        <ContextMenu>
          <MenuItem Header="Send message"
                    Command="{Binding ChatCommand}"/>
          <Separator/>
          <MenuItem Header="Block contact"
                    Command="{Binding BlockContactCommand}"
                    IsVisible="{Binding !SelectedContact.Blocked}"/>
          <MenuItem Header="Unblock contact"
                    Command="{Binding UnblockContactCommand}"
                    IsVisible="{Binding SelectedContact.Blocked}"/>
          <MenuItem Header="Delete contact"
                    Command="{Binding RemoveContactCommand}"/>
        </ContextMenu>
      </TreeView.ContextMenu>

      <i:Interaction.Behaviors>
        <ia:EventTriggerBehavior EventName="DoubleTapped">
          <InvokeCommandAction Command="{Binding ChatCommand}"/>
        </ia:EventTriggerBehavior>
      </i:Interaction.Behaviors>

    </TreeView>

  </Grid>
</UserControl>
